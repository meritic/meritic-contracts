{"id":"0d37a07d4259294a849a8048636992c1","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"},"contracts/TokenSwap.sol":{"content":"\n//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n\npragma abicoder v2;\n\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\ncontract TokenSwap {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n\n    ISwapRouter public immutable swapRouter;\n\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n    //address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    //address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    //address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n    \n    address private constant WMATIC = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889; \n    address private constant USDC = 0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747;\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n    constructor(address _swapRouter) {\n        swapRouter = ISwapRouter(_swapRouter);\n    }\n\n    /// @notice swapExactInputSingle swaps a fixed amount of WMATIC for a maximum possible amount of USDC\n    /// using the WMATIC/USDC 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its WMATIC for this function to succeed.\n    /// @param amountIn The exact amount of WMATIC that will be swapped for WETH9.\n    /// @return amountOut The amount of USDC received.\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of WMATIC to this contract.\n        TransferHelper.safeTransferFrom(WMATIC, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend WMATIC.\n        TransferHelper.safeApprove(USDC, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n\t\t\t\t\t\t\t\t\t\t\t\t                tokenIn: WMATIC,\n\t\t\t\t\t\t\t\t\t\t\t\t                tokenOut: USDC,\n\t\t\t\t\t\t\t\t\t\t\t\t                fee: poolFee,\n\t\t\t\t\t\t\t\t\t\t\t\t                recipient: msg.sender,\n\t\t\t\t\t\t\t\t\t\t\t\t                deadline: block.timestamp,\n\t\t\t\t\t\t\t\t\t\t\t\t                amountIn: amountIn,\n\t\t\t\t\t\t\t\t\t\t\t\t                amountOutMinimum: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t                sqrtPriceLimitX96: 0\n\t\t\t\t\t\t\t\t\t\t\t\t            });\n\n        // The call to `exactInputSingle` executes the swap.\n       \tamountOut = swapRouter.exactInputSingle(params);\n        \n        \n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of WMATIC for a fixed amount of USDC.\n    /// @dev The calling address must approve this contract to spend its WMATIC for this function to succeed. As the amount of input WMATIC is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of USDC to receive from the swap.\n    /// @param amountInMaximum The amount of WMATIC we are willing to spend to receive the specified amount of USDC.\n    /// @return amountIn The amount of WMATIC actually spent in the swap.\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\n        // Transfer the specified amount of WMATIC to this contract.\n        TransferHelper.safeTransferFrom(WMATIC, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of WMATIC.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(WMATIC, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: WMATIC,\n                tokenOut: USDC,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(WMATIC, address(swapRouter), 0);\n            TransferHelper.safeTransfer(WMATIC, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n}\n\n\n\n\n/*contract TokenSwap {\n    \n    address private constant UNISWAP_V2_ROUTER = 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45; \t\n    // 0xDED33Fff66356AaffBD03a972ef9fd91fe620D3d (Polygon Mumbai)\n    \n    address private constant WMATIC = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889; \n    address private constant USDC = 0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747;\n    // 0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa (Polygon Mumbai)\n    \n    \n\n    \n    \n    function swap(address _tokenIn, address _tokenOut, uint256 _amountIn, uint256 _amountOutMin, address _to) external {\n    \n    \taddress _tokenOut = 0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747;\n    \t//first we need to transfer the amount in tokens from the msg.sender to this contract\n    \t//this contract will have the amount of in tokens\n    \tIERC20(_tokenIn).transferFrom(msg.sender, address(this), _amountIn);\n        \n        //next we need to allow the uniswapv2 router to spend the token we just sent to this contract\n    \t//by calling IERC20 approve you allow the uniswap contract to spend the tokens in this contract \n    \tIERC20(_tokenIn).approve(UNISWAP_V2_ROUTER, _amountIn);\n    \t\n    \t\n    \t\n        address[] memory path;\n        \n        if (_tokenIn == WMATIC || _tokenOut == WMATIC) {\n      \t\tpath = new address[](2);\n      \t\tpath[0] = _tokenIn;\n      \t\tpath[1] = _tokenOut;\n    \t} else {\n      \t\tpath = new address[](3);\n      \t\tpath[0] = _tokenIn;\n      \t\tpath[1] = WMATIC;\n      \t\tpath[2] = _tokenOut;\n    \t}\n    \t\n        IUniswapV2Router02(UNISWAP_V2_ROUTER).swapExactTokensForTokens(_amountIn, _amountOutMin, path, _to, block.timestamp);\n    }\n    \n    function getAmountOutMin(address _tokenIn, address _tokenOut, uint256 _amountIn) external view returns (uint256) {\n\t\taddress _tokenOut = 0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747;\n        address[] memory path;\n        if (_tokenIn == WMATIC || _tokenOut == WMATIC) {\n            path = new address[](2);\n            path[0] = _tokenIn;\n            path[1] = _tokenOut;\n        } else {\n            path = new address[](3);\n            path[0] = _tokenIn;\n            path[1] = WMATIC;\n            path[2] = _tokenOut;\n        }\n        //IUniswapV2Router02(UNISWAP_V2_ROUTER);\n        uint256[] memory amountOutMins = IUniswapV2Router02(UNISWAP_V2_ROUTER).getAmountsOut(_amountIn, path);\n        return amountOutMins[path.length - 1];  \n    }  \n}*/\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2685:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2707:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2727:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0","usedErrors":[]}],"src":"106:2661:0"},"id":0},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[91]},"id":92,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"71:144:1","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":91,"linearizedBaseContracts":[91],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"254:898:1","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":90,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:1","nodeType":"VariableDeclaration","scope":90,"src":"1197:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:1","nodeType":"VariableDeclaration","scope":90,"src":"1226:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":84,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"data","nameLocation":"1270:4:1","nodeType":"VariableDeclaration","scope":90,"src":"1255:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1289:0:1"},"scope":91,"src":"1157:133:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":92,"src":"215:1077:1","usedErrors":[]}],"src":"45:1248:1"},"id":1},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[191],"IUniswapV3SwapCallback":[91]},"id":192,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":93,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:2"},{"id":94,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:2"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":95,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":192,"sourceUnit":92,"src":"91:83:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":97,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:2"],"nodeType":"IdentifierPath","referencedDeclaration":91,"src":"305:22:2"},"id":98,"nodeType":"InheritanceSpecifier","src":"305:22:2"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"176:104:2","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":191,"linearizedBaseContracts":[191,91],"name":"ISwapRouter","nameLocation":"290:11:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":115,"members":[{"constant":false,"id":100,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:2","nodeType":"VariableDeclaration","scope":115,"src":"374:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:2","nodeType":"VariableDeclaration","scope":115,"src":"399:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"fee","nameLocation":"432:3:2","nodeType":"VariableDeclaration","scope":115,"src":"425:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":103,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"recipient","nameLocation":"453:9:2","nodeType":"VariableDeclaration","scope":115,"src":"445:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"deadline","nameLocation":"480:8:2","nodeType":"VariableDeclaration","scope":115,"src":"472:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:2","nodeType":"VariableDeclaration","scope":115,"src":"498:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:2","nodeType":"VariableDeclaration","scope":115,"src":"524:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:2","nodeType":"VariableDeclaration","scope":115,"src":"558:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":113,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:2","nodeType":"StructDefinition","scope":191,"src":"334:256:2","visibility":"public"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"596:250:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":124,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:2","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"params","nameLocation":"909:6:2","nodeType":"VariableDeclaration","scope":124,"src":"877:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":118,"nodeType":"UserDefinedTypeName","pathNode":{"id":117,"name":"ExactInputSingleParams","nameLocations":["877:22:2"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"877:22:2"},"referencedDeclaration":115,"src":"877:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:2"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:2","nodeType":"VariableDeclaration","scope":124,"src":"943:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:2"},"scope":191,"src":"851:111:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":135,"members":[{"constant":false,"id":126,"mutability":"mutable","name":"path","nameLocation":"1008:4:2","nodeType":"VariableDeclaration","scope":135,"src":"1002:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":125,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:2","nodeType":"VariableDeclaration","scope":135,"src":"1022:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:2","nodeType":"VariableDeclaration","scope":135,"src":"1049:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:2","nodeType":"VariableDeclaration","scope":135,"src":"1075:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:2","nodeType":"VariableDeclaration","scope":135,"src":"1101:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:2","nodeType":"StructDefinition","scope":191,"src":"968:164:2","visibility":"public"},{"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"1138:273:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:2","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"params","nameLocation":"1462:6:2","nodeType":"VariableDeclaration","scope":144,"src":"1436:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$135_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":138,"nodeType":"UserDefinedTypeName","pathNode":{"id":137,"name":"ExactInputParams","nameLocations":["1436:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":135,"src":"1436:16:2"},"referencedDeclaration":135,"src":"1436:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$135_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:2","nodeType":"VariableDeclaration","scope":144,"src":"1496:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:2"},"scope":191,"src":"1416:99:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":161,"members":[{"constant":false,"id":146,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:2","nodeType":"VariableDeclaration","scope":161,"src":"1562:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:2","nodeType":"VariableDeclaration","scope":161,"src":"1587:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"fee","nameLocation":"1620:3:2","nodeType":"VariableDeclaration","scope":161,"src":"1613:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":149,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:2","nodeType":"VariableDeclaration","scope":161,"src":"1633:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:2","nodeType":"VariableDeclaration","scope":161,"src":"1660:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:2","nodeType":"VariableDeclaration","scope":161,"src":"1686:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:2","nodeType":"VariableDeclaration","scope":161,"src":"1713:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:2","nodeType":"VariableDeclaration","scope":161,"src":"1746:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":159,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:2","nodeType":"StructDefinition","scope":191,"src":"1521:257:2","visibility":"public"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"1784:250:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:2","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"params","nameLocation":"2099:6:2","nodeType":"VariableDeclaration","scope":170,"src":"2066:39:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":164,"nodeType":"UserDefinedTypeName","pathNode":{"id":163,"name":"ExactOutputSingleParams","nameLocations":["2066:23:2"],"nodeType":"IdentifierPath","referencedDeclaration":161,"src":"2066:23:2"},"referencedDeclaration":161,"src":"2066:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:2","nodeType":"VariableDeclaration","scope":170,"src":"2133:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:2"},"scope":191,"src":"2039:112:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":181,"members":[{"constant":false,"id":172,"mutability":"mutable","name":"path","nameLocation":"2198:4:2","nodeType":"VariableDeclaration","scope":181,"src":"2192:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":171,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:2","nodeType":"VariableDeclaration","scope":181,"src":"2212:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:2","nodeType":"VariableDeclaration","scope":181,"src":"2239:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:2","nodeType":"VariableDeclaration","scope":181,"src":"2265:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:2","nodeType":"VariableDeclaration","scope":181,"src":"2292:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:2","nodeType":"StructDefinition","scope":191,"src":"2157:165:2","visibility":"public"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2328:284:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":190,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:2","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"params","nameLocation":"2665:6:2","nodeType":"VariableDeclaration","scope":190,"src":"2638:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$181_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"ExactOutputParams","nameLocations":["2638:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2638:17:2"},"referencedDeclaration":181,"src":"2638:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$181_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:2"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:2","nodeType":"VariableDeclaration","scope":190,"src":"2699:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:2"},"scope":191,"src":"2617:100:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":192,"src":"280:2439:2","usedErrors":[]}],"src":"45:2675:2"},"id":2},"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol","exportedSymbols":{"IERC20":[77],"TransferHelper":[362]},"id":363,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":193,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"45:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":78,"src":"71:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"TransferHelper","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":362,"linearizedBaseContracts":[362],"name":"TransferHelper","nameLocation":"137:14:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":242,"nodeType":"Block","src":"690:229:3","statements":[{"assignments":[207,209],"declarations":[{"constant":false,"id":207,"mutability":"mutable","name":"success","nameLocation":"706:7:3","nodeType":"VariableDeclaration","scope":242,"src":"701:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"701:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"data","nameLocation":"728:4:3","nodeType":"VariableDeclaration","scope":242,"src":"715:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":208,"name":"bytes","nodeType":"ElementaryTypeName","src":"715:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":222,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":214,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"782:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"789:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":76,"src":"782:19:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transferFrom(address,address,uint256) returns (bool)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"802:8:3","memberName":"selector","nodeType":"MemberAccess","src":"782:28:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":217,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"812:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"818:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"822:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":212,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"759:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"763:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"759:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":210,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"748:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"754:4:3","memberName":"call","nodeType":"MemberAccess","src":"748:10:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"748:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"700:129:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":224,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"847:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":225,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"859:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"864:6:3","memberName":"length","nodeType":"MemberAccess","src":"859:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"859:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":231,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"890:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"897:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":232,"name":"bool","nodeType":"ElementaryTypeName","src":"897:4:3","typeDescriptions":{}}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"896:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":229,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"879:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:6:3","memberName":"decode","nodeType":"MemberAccess","src":"879:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"879:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"859:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"858:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"847:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"535446","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"906:5:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86","typeString":"literal_string \"STF\""},"value":"STF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86","typeString":"literal_string \"STF\""}],"id":223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"839:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"839:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"839:73:3"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"158:398:3","text":"@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"},"id":243,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"570:16:3","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"token","nameLocation":"604:5:3","nodeType":"VariableDeclaration","scope":243,"src":"596:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"from","nameLocation":"627:4:3","nodeType":"VariableDeclaration","scope":243,"src":"619:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"to","nameLocation":"649:2:3","nodeType":"VariableDeclaration","scope":243,"src":"641:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"641:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"value","nameLocation":"669:5:3","nodeType":"VariableDeclaration","scope":243,"src":"661:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"586:94:3"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"690:0:3"},"scope":362,"src":"561:358:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":288,"nodeType":"Block","src":"1314:206:3","statements":[{"assignments":[254,256],"declarations":[{"constant":false,"id":254,"mutability":"mutable","name":"success","nameLocation":"1330:7:3","nodeType":"VariableDeclaration","scope":288,"src":"1325:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":253,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"data","nameLocation":"1352:4:3","nodeType":"VariableDeclaration","scope":288,"src":"1339:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":255,"name":"bytes","nodeType":"ElementaryTypeName","src":"1339:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":268,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":261,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1394:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1401:8:3","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1394:15:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transfer(address,uint256) returns (bool)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1394:24:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1420:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1424:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":259,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1371:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1375:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1371:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1371:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":257,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1360:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1366:4:3","memberName":"call","nodeType":"MemberAccess","src":"1360:10:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1360:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1324:107:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1449:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1461:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1466:6:3","memberName":"length","nodeType":"MemberAccess","src":"1461:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1476:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1461:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1492:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1499:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":278,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:3","typeDescriptions":{}}}],"id":280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1498:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":275,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1481:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1485:6:3","memberName":"decode","nodeType":"MemberAccess","src":"1481:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1481:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1461:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1460:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1449:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5354","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1508:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca","typeString":"literal_string \"ST\""},"value":"ST"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca","typeString":"literal_string \"ST\""}],"id":269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1441:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1441:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"1441:72:3"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"925:281:3","text":"@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"},"id":289,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1220:12:3","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"token","nameLocation":"1250:5:3","nodeType":"VariableDeclaration","scope":289,"src":"1242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"to","nameLocation":"1273:2:3","nodeType":"VariableDeclaration","scope":289,"src":"1265:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"value","nameLocation":"1293:5:3","nodeType":"VariableDeclaration","scope":289,"src":"1285:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1232:72:3"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"1314:0:3"},"scope":362,"src":"1211:309:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":334,"nodeType":"Block","src":"1975:205:3","statements":[{"assignments":[300,302],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"success","nameLocation":"1991:7:3","nodeType":"VariableDeclaration","scope":334,"src":"1986:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"1986:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"data","nameLocation":"2013:4:3","nodeType":"VariableDeclaration","scope":334,"src":"2000:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":301,"name":"bytes","nodeType":"ElementaryTypeName","src":"2000:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":314,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":307,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2055:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2062:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2055:14:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.approve(address,uint256) returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2070:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2055:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2080:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2084:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":305,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2032:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2036:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2032:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2032:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":303,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2021:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2027:4:3","memberName":"call","nodeType":"MemberAccess","src":"2021:10:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1985:106:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":316,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2109:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"2121:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2126:6:3","memberName":"length","nodeType":"MemberAccess","src":"2121:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2136:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2121:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":323,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"2152:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2159:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"2159:4:3","typeDescriptions":{}}}],"id":326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":321,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2141:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2145:6:3","memberName":"decode","nodeType":"MemberAccess","src":"2141:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2121:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2120:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2109:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5341","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2168:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa","typeString":"literal_string \"SA\""},"value":"SA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa","typeString":"literal_string \"SA\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2101:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"2101:72:3"}]},"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"1526:342:3","text":"@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"},"id":335,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1882:11:3","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"token","nameLocation":"1911:5:3","nodeType":"VariableDeclaration","scope":335,"src":"1903:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"to","nameLocation":"1934:2:3","nodeType":"VariableDeclaration","scope":335,"src":"1926:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"value","nameLocation":"1954:5:3","nodeType":"VariableDeclaration","scope":335,"src":"1946:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:72:3"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"1975:0:3"},"scope":362,"src":"1873:307:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"2431:104:3","statements":[{"assignments":[344,null],"declarations":[{"constant":false,"id":344,"mutability":"mutable","name":"success","nameLocation":"2447:7:3","nodeType":"VariableDeclaration","scope":360,"src":"2442:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"2442:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":354,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2482:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":349,"name":"bytes","nodeType":"ElementaryTypeName","src":"2486:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2482:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2460:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:4:3","memberName":"call","nodeType":"MemberAccess","src":"2460:7:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2475:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2460:21:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2441:54:3"},{"expression":{"arguments":[{"id":356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2513:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"535445","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2522:5:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4","typeString":"literal_string \"STE\""},"value":"STE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4","typeString":"literal_string \"STE\""}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2505:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"2505:23:3"}]},"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"2186:179:3","text":"@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"2379:15:3","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"to","nameLocation":"2403:2:3","nodeType":"VariableDeclaration","scope":361,"src":"2395:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"value","nameLocation":"2415:5:3","nodeType":"VariableDeclaration","scope":361,"src":"2407:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:27:3"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"2431:0:3"},"scope":362,"src":"2370:165:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":363,"src":"129:2408:3","usedErrors":[]}],"src":"45:2493:3"},"id":3},"contracts/TokenSwap.sol":{"ast":{"absolutePath":"contracts/TokenSwap.sol","exportedSymbols":{"IERC20":[77],"ISwapRouter":[191],"IUniswapV3SwapCallback":[91],"TokenSwap":[539],"TransferHelper":[362]},"id":540,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:4"},{"id":365,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"65:19:4"},{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol","file":"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":540,"sourceUnit":363,"src":"86:70:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":540,"sourceUnit":192,"src":"157:68:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"TokenSwap","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":539,"linearizedBaseContracts":[539],"name":"TokenSwap","nameLocation":"236:9:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c31c9c07","id":370,"mutability":"immutable","name":"swapRouter","nameLocation":"713:10:4","nodeType":"VariableDeclaration","scope":539,"src":"684:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"},"typeName":{"id":369,"nodeType":"UserDefinedTypeName","pathNode":{"id":368,"name":"ISwapRouter","nameLocations":["684:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":191,"src":"684:11:4"},"referencedDeclaration":191,"src":"684:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":true,"id":373,"mutability":"constant","name":"WMATIC","nameLocation":"1103:6:4","nodeType":"VariableDeclaration","scope":539,"src":"1078:76:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839633343393238334433653434383534363937436432324433466161323430436662303332383839","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1112:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889"},"visibility":"private"},{"constant":true,"id":376,"mutability":"constant","name":"USDC","nameLocation":"1186:4:4","nodeType":"VariableDeclaration","scope":539,"src":"1161:74:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"1161:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307865366238613543463835343739313431326331663645464337434166363239663544663163373437","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747"},"visibility":"private"},{"constant":true,"functionSelector":"089fe6aa","id":379,"mutability":"constant","name":"poolFee","nameLocation":"1324:7:4","nodeType":"VariableDeclaration","scope":539,"src":"1301:37:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":377,"name":"uint24","nodeType":"ElementaryTypeName","src":"1301:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"33303030","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:4:4","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},"visibility":"public"},{"body":{"id":390,"nodeType":"Block","src":"1378:54:4","statements":[{"expression":{"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1388:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":386,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"1413:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":385,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1401:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$191_$","typeString":"type(contract ISwapRouter)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1401:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"src":"1388:37:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"id":389,"nodeType":"ExpressionStatement","src":"1388:37:4"}]},"id":391,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"_swapRouter","nameLocation":"1365:11:4","nodeType":"VariableDeclaration","scope":391,"src":"1357:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"1357:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1356:21:4"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"1378:0:4"},"scope":539,"src":"1345:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":449,"nodeType":"Block","src":"1996:1215:4","statements":[{"expression":{"arguments":[{"id":402,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2157:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2165:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2169:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2165:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":407,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2185:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_TokenSwap_$539","typeString":"contract TokenSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenSwap_$539","typeString":"contract TokenSwap"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2177:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"2177:7:4","typeDescriptions":{}}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2177:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":409,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2192:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":399,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2125:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$362_$","typeString":"type(library TransferHelper)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:16:4","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":243,"src":"2125:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"2125:76:4"},{"expression":{"arguments":[{"id":415,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2286:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":418,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2300:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2292:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:4","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":420,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2313:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":412,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2259:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$362_$","typeString":"type(library TransferHelper)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2274:11:4","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":335,"src":"2259:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"2259:63:4"},{"assignments":[427],"declarations":[{"constant":false,"id":427,"mutability":"mutable","name":"params","nameLocation":"2612:6:4","nodeType":"VariableDeclaration","scope":449,"src":"2570:48:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":426,"nodeType":"UserDefinedTypeName","pathNode":{"id":425,"name":"ISwapRouter.ExactInputSingleParams","nameLocations":["2570:11:4","2582:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"2570:34:4"},"referencedDeclaration":115,"src":"2570:34:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":441,"initialValue":{"arguments":[{"id":430,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2695:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":431,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2741:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"poolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2780:7:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2828:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2832:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2828:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":435,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2878:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"2878:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":437,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2933:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2989:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3039:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":428,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2621:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$191_$","typeString":"type(contract ISwapRouter)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2633:22:4","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":115,"src":"2621:34:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2686:7:4","2731:8:4","2775:3:4","2817:9:4","2868:8:4","2923:8:4","2971:16:4","3020:17:4"],"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"2621:446:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"2570:497:4"},{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":442,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3139:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":445,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3179:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":443,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3151:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3162:16:4","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":124,"src":"3151:27:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3151:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3139:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"ExpressionStatement","src":"3139:47:4"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1438:468:4","text":"@notice swapExactInputSingle swaps a fixed amount of WMATIC for a maximum possible amount of USDC\n using the WMATIC/USDC 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its WMATIC for this function to succeed.\n @param amountIn The exact amount of WMATIC that will be swapped for WETH9.\n @return amountOut The amount of USDC received."},"functionSelector":"73bd43ad","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactInputSingle","nameLocation":"1920:20:4","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"amountIn","nameLocation":"1949:8:4","nodeType":"VariableDeclaration","scope":450,"src":"1941:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1940:18:4"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"amountOut","nameLocation":"1985:9:4","nodeType":"VariableDeclaration","scope":450,"src":"1977:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1977:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1976:19:4"},"scope":539,"src":"1911:1300:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":537,"nodeType":"Block","src":"3963:1518:4","statements":[{"expression":{"arguments":[{"id":463,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4074:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4082:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4086:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4082:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":468,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4102:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_TokenSwap_$539","typeString":"contract TokenSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenSwap_$539","typeString":"contract TokenSwap"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4094:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"4094:7:4","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4109:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":460,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4042:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$362_$","typeString":"type(library TransferHelper)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4057:16:4","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":243,"src":"4042:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4042:83:4"},{"expression":{"arguments":[{"id":476,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4381:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":479,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4397:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4389:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4389:7:4","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4389:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":481,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4410:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":473,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4354:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$362_$","typeString":"type(library TransferHelper)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4369:11:4","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":335,"src":"4354:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4354:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"4354:72:4"},{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"params","nameLocation":"4480:6:4","nodeType":"VariableDeclaration","scope":537,"src":"4437:49:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":487,"nodeType":"UserDefinedTypeName","pathNode":{"id":486,"name":"ISwapRouter.ExactOutputSingleParams","nameLocations":["4437:11:4","4449:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":161,"src":"4437:35:4"},"referencedDeclaration":161,"src":"4437:35:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"id":502,"initialValue":{"arguments":[{"id":491,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4564:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4598:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"poolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4625:7:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4661:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4665:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4661:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":496,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4699:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4705:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"4699:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":498,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4743:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":499,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4787:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":489,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"4501:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$191_$","typeString":"type(contract ISwapRouter)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4513:23:4","memberName":"ExactOutputSingleParams","nodeType":"MemberAccess","referencedDeclaration":161,"src":"4501:35:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactOutputSingleParams_$161_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4555:7:4","4588:8:4","4620:3:4","4650:9:4","4689:8:4","4732:9:4","4770:15:4","4820:17:4"],"names":["tokenIn","tokenOut","fee","recipient","deadline","amountOut","amountInMaximum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"4501:354:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"4437:418:4"},{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":503,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"4968:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":506,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5008:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}],"expression":{"id":504,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4979:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4990:17:4","memberName":"exactOutputSingle","nodeType":"MemberAccess","referencedDeclaration":170,"src":"4979:28:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactOutputSingleParams_$161_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4979:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4968:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":509,"nodeType":"ExpressionStatement","src":"4968:47:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":510,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5275:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":511,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5286:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5275:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"5271:204:4","trueBody":{"id":535,"nodeType":"Block","src":"5303:172:4","statements":[{"expression":{"arguments":[{"id":516,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5344:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":519,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"5360:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}],"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5352:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"5352:7:4","typeDescriptions":{}}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5373:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":513,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5317:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$362_$","typeString":"type(library TransferHelper)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5332:11:4","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":335,"src":"5317:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5317:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"5317:58:4"},{"expression":{"arguments":[{"id":527,"name":"WMATIC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5417:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5425:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5429:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5425:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":530,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5437:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":531,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5455:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5437:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":524,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5389:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$362_$","typeString":"type(library TransferHelper)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5404:12:4","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":289,"src":"5389:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"ExpressionStatement","src":"5389:75:4"}]}}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"3217:630:4","text":"@notice swapExactOutputSingle swaps a minimum possible amount of WMATIC for a fixed amount of USDC.\n @dev The calling address must approve this contract to spend its WMATIC for this function to succeed. As the amount of input WMATIC is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of USDC to receive from the swap.\n @param amountInMaximum The amount of WMATIC we are willing to spend to receive the specified amount of USDC.\n @return amountIn The amount of WMATIC actually spent in the swap."},"functionSelector":"c4b69a18","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactOutputSingle","nameLocation":"3861:21:4","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"amountOut","nameLocation":"3891:9:4","nodeType":"VariableDeclaration","scope":538,"src":"3883:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3883:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"amountInMaximum","nameLocation":"3910:15:4","nodeType":"VariableDeclaration","scope":538,"src":"3902:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3882:44:4"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"amountIn","nameLocation":"3953:8:4","nodeType":"VariableDeclaration","scope":538,"src":"3945:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3945:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3944:18:4"},"scope":539,"src":"3852:1629:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":540,"src":"227:5256:4","usedErrors":[]}],"src":"39:7824:4"},"id":4}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220188f777ce9f2adce4f9156d7d30113b0ea66132c061108204c88584f9cb83b6464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP16 PUSH24 0x7CE9F2ADCE4F9156D7D30113B0EA66132C061108204C8858 0x4F SWAP13 0xB8 EXTCODESIZE PUSH5 0x64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"129:2408:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;129:2408:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220188f777ce9f2adce4f9156d7d30113b0ea66132c061108204c88584f9cb83b6464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP16 PUSH24 0x7CE9F2ADCE4F9156D7D30113B0EA66132C061108204C8858 0x4F SWAP13 0xB8 EXTCODESIZE PUSH5 0x64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"129:2408:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}"}},"contracts/TokenSwap.sol":{"TokenSwap":{"abi":[{"inputs":[{"internalType":"address","name":"_swapRouter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"poolFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"swapExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"name":"swapExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_391":{"entryPoint":null,"id":391,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":64,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:5","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:5"},"nodeType":"YulFunctionCall","src":"143:12:5"},"nodeType":"YulExpressionStatement","src":"143:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:5"},"nodeType":"YulFunctionCall","src":"112:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:5"},"nodeType":"YulFunctionCall","src":"108:32:5"},"nodeType":"YulIf","src":"105:52:5"},{"nodeType":"YulVariableDeclaration","src":"166:29:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:5"},"nodeType":"YulFunctionCall","src":"179:16:5"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:5"},"nodeType":"YulFunctionCall","src":"260:12:5"},"nodeType":"YulExpressionStatement","src":"260:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:5"},"nodeType":"YulFunctionCall","src":"239:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:5"},"nodeType":"YulFunctionCall","src":"235:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:5"},"nodeType":"YulFunctionCall","src":"224:31:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:5"},"nodeType":"YulFunctionCall","src":"214:42:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:5"},"nodeType":"YulFunctionCall","src":"207:50:5"},"nodeType":"YulIf","src":"204:70:5"},{"nodeType":"YulAssignment","src":"283:15:5","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:5"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:5","type":""}],"src":"14:290:5"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161092d38038061092d83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516108806100ad60003960008181609901528181610122015281816101b90152818161027c0152818161031301526103b701526108806000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089fe6aa1461005157806373bd43ad14610073578063c31c9c0714610094578063c4b69a18146100d3575b600080fd5b61005a610bb881565b60405162ffffff90911681526020015b60405180910390f35b610086610081366004610714565b6100e6565b60405190815260200161006a565b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006a565b6100866100e136600461072d565b610240565b6000610108739c3c9283d3e44854697cd22d3faa240cfb03288933308561040c565b61014773e6b8a5cf854791412c1f6efc7caf629f5df1c7477f00000000000000000000000000000000000000000000000000000000000000008461051b565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb032889815273e6b8a5cf854791412c1f6efc7caf629f5df1c7476020820152610bb88183015233606082015242608082015260a08101849052600060c0820181905260e0820152905163414bf38960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063414bf389906101f690849060040161074f565b6020604051808303816000875af1158015610215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023991906107bf565b9392505050565b6000610262739c3c9283d3e44854697cd22d3faa240cfb03288933308561040c565b6102a1739c3c9283d3e44854697cd22d3faa240cfb0328897f00000000000000000000000000000000000000000000000000000000000000008461051b565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb032889815273e6b8a5cf854791412c1f6efc7caf629f5df1c7476020820152610bb88183015233606082015242608082015260a0810185905260c08101849052600060e08201529051631b67c43360e31b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db3e21989061035090849060040161074f565b6020604051808303816000875af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039391906107bf565b915082821015610405576103dd739c3c9283d3e44854697cd22d3faa240cfb0328897f0000000000000000000000000000000000000000000000000000000000000000600061051b565b610405739c3c9283d3e44854697cd22d3faa240cfb0328893361040085876107d8565b61061b565b5092915050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161047091906107f9565b6000604051808303816000865af19150503d80600081146104ad576040519150601f19603f3d011682016040523d82523d6000602084013e6104b2565b606091505b50915091508180156104dc5750805115806104dc5750808060200190518101906104dc9190610828565b6105135760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161057791906107f9565b6000604051808303816000865af19150503d80600081146105b4576040519150601f19603f3d011682016040523d82523d6000602084013e6105b9565b606091505b50915091508180156105e35750805115806105e35750808060200190518101906105e39190610828565b6106145760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161050a565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161067791906107f9565b6000604051808303816000865af19150503d80600081146106b4576040519150601f19603f3d011682016040523d82523d6000602084013e6106b9565b606091505b50915091508180156106e35750805115806106e35750808060200190518101906106e39190610828565b6106145760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161050a565b60006020828403121561072657600080fd5b5035919050565b6000806040838503121561074057600080fd5b50508035926020909101359150565b61010081016107b9828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c0808301519084015260e09182015116910152565b92915050565b6000602082840312156107d157600080fd5b5051919050565b818103818111156107b957634e487b7160e01b600052601160045260246000fd5b6000825160005b8181101561081a5760208186018101518583015201610800565b506000920191825250919050565b60006020828403121561083a57600080fd5b8151801515811461023957600080fdfea26469706673582212202b55d33e7e20142fda52f1e562bbe6a41e7868d3f04b361fc2d05e546b30c6e764736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x92D CODESIZE SUB DUP1 PUSH2 0x92D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x880 PUSH2 0xAD PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x99 ADD MSTORE DUP2 DUP2 PUSH2 0x122 ADD MSTORE DUP2 DUP2 PUSH2 0x1B9 ADD MSTORE DUP2 DUP2 PUSH2 0x27C ADD MSTORE DUP2 DUP2 PUSH2 0x313 ADD MSTORE PUSH2 0x3B7 ADD MSTORE PUSH2 0x880 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x81 CALLDATASIZE PUSH1 0x4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A JUMP JUMPDEST PUSH2 0xBB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A JUMP JUMPDEST PUSH2 0x86 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 CALLER ADDRESS DUP6 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x147 PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 PUSH32 0x0 DUP5 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 DUP2 MSTORE PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x1F6 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 CALLER ADDRESS DUP6 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x2A1 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 PUSH32 0x0 DUP5 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 DUP2 MSTORE PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x350 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x405 JUMPI PUSH2 0x3DD PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 PUSH32 0x0 PUSH1 0x0 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x405 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 CALLER PUSH2 0x400 DUP6 DUP8 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x4DC JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x4DC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x5E3 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x5E3 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x6E3 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x6E3 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD PUSH2 0x7B9 DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x800 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B SSTORE 0xD3 RETURNDATACOPY PUSH31 0x20142FDA52F1E562BBE6A41E7868D3F04B361FC2D05E546B30C6E764736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"227:5256:4:-:0;;;1345:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1388:37:4;;;227:5256;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;227:5256:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@poolFee_379":{"entryPoint":null,"id":379,"parameterSlots":0,"returnSlots":0},"@safeApprove_335":{"entryPoint":1307,"id":335,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_243":{"entryPoint":1036,"id":243,"parameterSlots":4,"returnSlots":0},"@safeTransfer_289":{"entryPoint":1563,"id":289,"parameterSlots":3,"returnSlots":0},"@swapExactInputSingle_450":{"entryPoint":230,"id":450,"parameterSlots":1,"returnSlots":1},"@swapExactOutputSingle_538":{"entryPoint":576,"id":538,"parameterSlots":2,"returnSlots":1},"@swapRouter_370":{"entryPoint":null,"id":370,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":1837,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_struct_ExactInputSingleParams":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed":{"entryPoint":1871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5006:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"113:91:5","statements":[{"nodeType":"YulAssignment","src":"123:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"135:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"146:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"131:3:5"},"nodeType":"YulFunctionCall","src":"131:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"123:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"165:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"180:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"188:8:5","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"176:3:5"},"nodeType":"YulFunctionCall","src":"176:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"158:6:5"},"nodeType":"YulFunctionCall","src":"158:40:5"},"nodeType":"YulExpressionStatement","src":"158:40:5"}]},"name":"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"82:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"93:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"104:4:5","type":""}],"src":"14:190:5"},{"body":{"nodeType":"YulBlock","src":"279:110:5","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:5"},"nodeType":"YulFunctionCall","src":"327:12:5"},"nodeType":"YulExpressionStatement","src":"327:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:5"},"nodeType":"YulFunctionCall","src":"296:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:5"},"nodeType":"YulFunctionCall","src":"292:32:5"},"nodeType":"YulIf","src":"289:52:5"},{"nodeType":"YulAssignment","src":"350:33:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"360:12:5"},"nodeType":"YulFunctionCall","src":"360:23:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:5"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"245:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"256:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"268:6:5","type":""}],"src":"209:180:5"},{"body":{"nodeType":"YulBlock","src":"495:76:5","statements":[{"nodeType":"YulAssignment","src":"505:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:5"},"nodeType":"YulFunctionCall","src":"513:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"558:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:5"},"nodeType":"YulFunctionCall","src":"540:25:5"},"nodeType":"YulExpressionStatement","src":"540:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:5","type":""}],"src":"394:177:5"},{"body":{"nodeType":"YulBlock","src":"696:102:5","statements":[{"nodeType":"YulAssignment","src":"706:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"729:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:5"},"nodeType":"YulFunctionCall","src":"714:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"706:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"748:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"763:6:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"779:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"784:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"775:3:5"},"nodeType":"YulFunctionCall","src":"775:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"788:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"771:3:5"},"nodeType":"YulFunctionCall","src":"771:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"759:3:5"},"nodeType":"YulFunctionCall","src":"759:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"741:6:5"},"nodeType":"YulFunctionCall","src":"741:51:5"},"nodeType":"YulExpressionStatement","src":"741:51:5"}]},"name":"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"665:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"676:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"687:4:5","type":""}],"src":"576:222:5"},{"body":{"nodeType":"YulBlock","src":"890:161:5","statements":[{"body":{"nodeType":"YulBlock","src":"936:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"945:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"948:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"938:6:5"},"nodeType":"YulFunctionCall","src":"938:12:5"},"nodeType":"YulExpressionStatement","src":"938:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"911:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"920:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"907:3:5"},"nodeType":"YulFunctionCall","src":"907:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"932:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"903:3:5"},"nodeType":"YulFunctionCall","src":"903:32:5"},"nodeType":"YulIf","src":"900:52:5"},{"nodeType":"YulAssignment","src":"961:33:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"984:9:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"971:12:5"},"nodeType":"YulFunctionCall","src":"971:23:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"961:6:5"}]},{"nodeType":"YulAssignment","src":"1003:42:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:5"},"nodeType":"YulFunctionCall","src":"1026:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1013:12:5"},"nodeType":"YulFunctionCall","src":"1013:32:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1003:6:5"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"848:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"859:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"871:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"879:6:5","type":""}],"src":"803:248:5"},{"body":{"nodeType":"YulBlock","src":"1122:522:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1132:29:5","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1150:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1155:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1146:3:5"},"nodeType":"YulFunctionCall","src":"1146:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"1159:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1142:3:5"},"nodeType":"YulFunctionCall","src":"1142:19:5"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1136:2:5","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1177:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1192:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1186:5:5"},"nodeType":"YulFunctionCall","src":"1186:12:5"},{"name":"_1","nodeType":"YulIdentifier","src":"1200:2:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1182:3:5"},"nodeType":"YulFunctionCall","src":"1182:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1170:6:5"},"nodeType":"YulFunctionCall","src":"1170:34:5"},"nodeType":"YulExpressionStatement","src":"1170:34:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1224:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1229:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:5"},"nodeType":"YulFunctionCall","src":"1220:14:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1250:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1257:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1246:3:5"},"nodeType":"YulFunctionCall","src":"1246:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1240:5:5"},"nodeType":"YulFunctionCall","src":"1240:23:5"},{"name":"_1","nodeType":"YulIdentifier","src":"1265:2:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1236:3:5"},"nodeType":"YulFunctionCall","src":"1236:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1213:6:5"},"nodeType":"YulFunctionCall","src":"1213:56:5"},"nodeType":"YulExpressionStatement","src":"1213:56:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1289:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1294:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1285:3:5"},"nodeType":"YulFunctionCall","src":"1285:14:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1315:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1322:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:5"},"nodeType":"YulFunctionCall","src":"1311:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1305:5:5"},"nodeType":"YulFunctionCall","src":"1305:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1330:8:5","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1301:3:5"},"nodeType":"YulFunctionCall","src":"1301:38:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1278:6:5"},"nodeType":"YulFunctionCall","src":"1278:62:5"},"nodeType":"YulExpressionStatement","src":"1278:62:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1360:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1365:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1356:3:5"},"nodeType":"YulFunctionCall","src":"1356:14:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1386:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1393:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1382:3:5"},"nodeType":"YulFunctionCall","src":"1382:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1376:5:5"},"nodeType":"YulFunctionCall","src":"1376:23:5"},{"name":"_1","nodeType":"YulIdentifier","src":"1401:2:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1372:3:5"},"nodeType":"YulFunctionCall","src":"1372:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1349:6:5"},"nodeType":"YulFunctionCall","src":"1349:56:5"},"nodeType":"YulExpressionStatement","src":"1349:56:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1425:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1430:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1421:3:5"},"nodeType":"YulFunctionCall","src":"1421:14:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1454:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:5"},"nodeType":"YulFunctionCall","src":"1443:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1437:5:5"},"nodeType":"YulFunctionCall","src":"1437:23:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1414:6:5"},"nodeType":"YulFunctionCall","src":"1414:47:5"},"nodeType":"YulExpressionStatement","src":"1414:47:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1481:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1486:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:5"},"nodeType":"YulFunctionCall","src":"1477:14:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1503:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1510:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:5"},"nodeType":"YulFunctionCall","src":"1499:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1493:5:5"},"nodeType":"YulFunctionCall","src":"1493:23:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:5"},"nodeType":"YulFunctionCall","src":"1470:47:5"},"nodeType":"YulExpressionStatement","src":"1470:47:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1537:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1542:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:5"},"nodeType":"YulFunctionCall","src":"1533:14:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1559:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1566:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1555:3:5"},"nodeType":"YulFunctionCall","src":"1555:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1549:5:5"},"nodeType":"YulFunctionCall","src":"1549:23:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1526:6:5"},"nodeType":"YulFunctionCall","src":"1526:47:5"},"nodeType":"YulExpressionStatement","src":"1526:47:5"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1593:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1598:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1589:3:5"},"nodeType":"YulFunctionCall","src":"1589:14:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1619:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1626:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1615:3:5"},"nodeType":"YulFunctionCall","src":"1615:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1609:5:5"},"nodeType":"YulFunctionCall","src":"1609:23:5"},{"name":"_1","nodeType":"YulIdentifier","src":"1634:2:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1605:3:5"},"nodeType":"YulFunctionCall","src":"1605:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1582:6:5"},"nodeType":"YulFunctionCall","src":"1582:56:5"},"nodeType":"YulExpressionStatement","src":"1582:56:5"}]},"name":"abi_encode_struct_ExactInputSingleParams","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1106:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1113:3:5","type":""}],"src":"1056:588:5"},{"body":{"nodeType":"YulBlock","src":"1828:111:5","statements":[{"nodeType":"YulAssignment","src":"1838:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1861:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:5"},"nodeType":"YulFunctionCall","src":"1846:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1838:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1915:6:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1923:9:5"}],"functionName":{"name":"abi_encode_struct_ExactInputSingleParams","nodeType":"YulIdentifier","src":"1874:40:5"},"nodeType":"YulFunctionCall","src":"1874:59:5"},"nodeType":"YulExpressionStatement","src":"1874:59:5"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1797:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1808:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1819:4:5","type":""}],"src":"1649:290:5"},{"body":{"nodeType":"YulBlock","src":"2025:103:5","statements":[{"body":{"nodeType":"YulBlock","src":"2071:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2080:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2083:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2073:6:5"},"nodeType":"YulFunctionCall","src":"2073:12:5"},"nodeType":"YulExpressionStatement","src":"2073:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2046:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"2055:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2042:3:5"},"nodeType":"YulFunctionCall","src":"2042:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"2067:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2038:3:5"},"nodeType":"YulFunctionCall","src":"2038:32:5"},"nodeType":"YulIf","src":"2035:52:5"},{"nodeType":"YulAssignment","src":"2096:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2112:9:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2106:5:5"},"nodeType":"YulFunctionCall","src":"2106:16:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2096:6:5"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1991:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2002:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2014:6:5","type":""}],"src":"1944:184:5"},{"body":{"nodeType":"YulBlock","src":"2314:111:5","statements":[{"nodeType":"YulAssignment","src":"2324:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2336:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2347:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2332:3:5"},"nodeType":"YulFunctionCall","src":"2332:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2324:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2401:6:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"2409:9:5"}],"functionName":{"name":"abi_encode_struct_ExactInputSingleParams","nodeType":"YulIdentifier","src":"2360:40:5"},"nodeType":"YulFunctionCall","src":"2360:59:5"},"nodeType":"YulExpressionStatement","src":"2360:59:5"}]},"name":"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2283:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2294:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2305:4:5","type":""}],"src":"2133:292:5"},{"body":{"nodeType":"YulBlock","src":"2479:176:5","statements":[{"nodeType":"YulAssignment","src":"2489:17:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2501:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2504:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2497:3:5"},"nodeType":"YulFunctionCall","src":"2497:9:5"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"2489:4:5"}]},{"body":{"nodeType":"YulBlock","src":"2538:111:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2559:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2566:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2571:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2562:3:5"},"nodeType":"YulFunctionCall","src":"2562:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2552:6:5"},"nodeType":"YulFunctionCall","src":"2552:31:5"},"nodeType":"YulExpressionStatement","src":"2552:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2603:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2606:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2596:6:5"},"nodeType":"YulFunctionCall","src":"2596:15:5"},"nodeType":"YulExpressionStatement","src":"2596:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2631:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2634:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2624:6:5"},"nodeType":"YulFunctionCall","src":"2624:15:5"},"nodeType":"YulExpressionStatement","src":"2624:15:5"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"2521:4:5"},{"name":"x","nodeType":"YulIdentifier","src":"2527:1:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2518:2:5"},"nodeType":"YulFunctionCall","src":"2518:11:5"},"nodeType":"YulIf","src":"2515:134:5"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2461:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"2464:1:5","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"2470:4:5","type":""}],"src":"2430:225:5"},{"body":{"nodeType":"YulBlock","src":"2817:218:5","statements":[{"nodeType":"YulAssignment","src":"2827:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2839:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2850:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2835:3:5"},"nodeType":"YulFunctionCall","src":"2835:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2827:4:5"}]},{"nodeType":"YulVariableDeclaration","src":"2862:29:5","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2880:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2885:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2876:3:5"},"nodeType":"YulFunctionCall","src":"2876:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"2889:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2872:3:5"},"nodeType":"YulFunctionCall","src":"2872:19:5"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2866:2:5","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2907:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2922:6:5"},{"name":"_1","nodeType":"YulIdentifier","src":"2930:2:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2918:3:5"},"nodeType":"YulFunctionCall","src":"2918:15:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2900:6:5"},"nodeType":"YulFunctionCall","src":"2900:34:5"},"nodeType":"YulExpressionStatement","src":"2900:34:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2954:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2965:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2950:3:5"},"nodeType":"YulFunctionCall","src":"2950:18:5"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2974:6:5"},{"name":"_1","nodeType":"YulIdentifier","src":"2982:2:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2970:3:5"},"nodeType":"YulFunctionCall","src":"2970:15:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2943:6:5"},"nodeType":"YulFunctionCall","src":"2943:43:5"},"nodeType":"YulExpressionStatement","src":"2943:43:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3006:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3017:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3002:3:5"},"nodeType":"YulFunctionCall","src":"3002:18:5"},{"name":"value2","nodeType":"YulIdentifier","src":"3022:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2995:6:5"},"nodeType":"YulFunctionCall","src":"2995:34:5"},"nodeType":"YulExpressionStatement","src":"2995:34:5"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2770:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2781:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2789:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2797:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2808:4:5","type":""}],"src":"2660:375:5"},{"body":{"nodeType":"YulBlock","src":"3177:275:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3187:27:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3207:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3201:5:5"},"nodeType":"YulFunctionCall","src":"3201:13:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3191:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3223:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"3232:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3227:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3294:77:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3319:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"3324:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:5"},"nodeType":"YulFunctionCall","src":"3315:11:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3342:6:5"},{"name":"i","nodeType":"YulIdentifier","src":"3350:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:5"},"nodeType":"YulFunctionCall","src":"3338:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"3354:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3334:3:5"},"nodeType":"YulFunctionCall","src":"3334:25:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3328:5:5"},"nodeType":"YulFunctionCall","src":"3328:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3308:6:5"},"nodeType":"YulFunctionCall","src":"3308:53:5"},"nodeType":"YulExpressionStatement","src":"3308:53:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3253:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"3256:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3250:2:5"},"nodeType":"YulFunctionCall","src":"3250:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3264:21:5","statements":[{"nodeType":"YulAssignment","src":"3266:17:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3275:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3271:3:5"},"nodeType":"YulFunctionCall","src":"3271:12:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3266:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"3246:3:5","statements":[]},"src":"3242:129:5"},{"nodeType":"YulVariableDeclaration","src":"3380:26:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3394:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3399:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3390:3:5"},"nodeType":"YulFunctionCall","src":"3390:16:5"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3384:2:5","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3422:2:5"},{"kind":"number","nodeType":"YulLiteral","src":"3426:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3415:6:5"},"nodeType":"YulFunctionCall","src":"3415:13:5"},"nodeType":"YulExpressionStatement","src":"3415:13:5"},{"nodeType":"YulAssignment","src":"3437:9:5","value":{"name":"_1","nodeType":"YulIdentifier","src":"3444:2:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3437:3:5"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3153:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3158:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3169:3:5","type":""}],"src":"3040:412:5"},{"body":{"nodeType":"YulBlock","src":"3535:199:5","statements":[{"body":{"nodeType":"YulBlock","src":"3581:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3590:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3593:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3583:6:5"},"nodeType":"YulFunctionCall","src":"3583:12:5"},"nodeType":"YulExpressionStatement","src":"3583:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3556:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3552:3:5"},"nodeType":"YulFunctionCall","src":"3552:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"3577:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3548:3:5"},"nodeType":"YulFunctionCall","src":"3548:32:5"},"nodeType":"YulIf","src":"3545:52:5"},{"nodeType":"YulVariableDeclaration","src":"3606:29:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3625:9:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3619:5:5"},"nodeType":"YulFunctionCall","src":"3619:16:5"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3610:5:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3688:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3697:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3700:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3690:6:5"},"nodeType":"YulFunctionCall","src":"3690:12:5"},"nodeType":"YulExpressionStatement","src":"3690:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3657:5:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3678:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3671:6:5"},"nodeType":"YulFunctionCall","src":"3671:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3664:6:5"},"nodeType":"YulFunctionCall","src":"3664:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3654:2:5"},"nodeType":"YulFunctionCall","src":"3654:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3647:6:5"},"nodeType":"YulFunctionCall","src":"3647:40:5"},"nodeType":"YulIf","src":"3644:60:5"},{"nodeType":"YulAssignment","src":"3713:15:5","value":{"name":"value","nodeType":"YulIdentifier","src":"3723:5:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3713:6:5"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3501:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3512:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3524:6:5","type":""}],"src":"3457:277:5"},{"body":{"nodeType":"YulBlock","src":"3913:152:5","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3930:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3941:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3923:6:5"},"nodeType":"YulFunctionCall","src":"3923:21:5"},"nodeType":"YulExpressionStatement","src":"3923:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3964:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3975:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3960:3:5"},"nodeType":"YulFunctionCall","src":"3960:18:5"},{"kind":"number","nodeType":"YulLiteral","src":"3980:1:5","type":"","value":"3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3953:6:5"},"nodeType":"YulFunctionCall","src":"3953:29:5"},"nodeType":"YulExpressionStatement","src":"3953:29:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4002:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4013:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:5"},"nodeType":"YulFunctionCall","src":"3998:18:5"},{"hexValue":"535446","kind":"string","nodeType":"YulLiteral","src":"4018:5:5","type":"","value":"STF"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3991:6:5"},"nodeType":"YulFunctionCall","src":"3991:33:5"},"nodeType":"YulExpressionStatement","src":"3991:33:5"},{"nodeType":"YulAssignment","src":"4033:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4056:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4041:3:5"},"nodeType":"YulFunctionCall","src":"4041:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4033:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3890:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3904:4:5","type":""}],"src":"3739:326:5"},{"body":{"nodeType":"YulBlock","src":"4199:145:5","statements":[{"nodeType":"YulAssignment","src":"4209:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4221:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4232:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4217:3:5"},"nodeType":"YulFunctionCall","src":"4217:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4209:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4251:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4266:6:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4282:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4287:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4278:3:5"},"nodeType":"YulFunctionCall","src":"4278:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"4291:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4274:3:5"},"nodeType":"YulFunctionCall","src":"4274:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4262:3:5"},"nodeType":"YulFunctionCall","src":"4262:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4244:6:5"},"nodeType":"YulFunctionCall","src":"4244:51:5"},"nodeType":"YulExpressionStatement","src":"4244:51:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4315:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4326:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4311:3:5"},"nodeType":"YulFunctionCall","src":"4311:18:5"},{"name":"value1","nodeType":"YulIdentifier","src":"4331:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4304:6:5"},"nodeType":"YulFunctionCall","src":"4304:34:5"},"nodeType":"YulExpressionStatement","src":"4304:34:5"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4160:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4171:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4179:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4190:4:5","type":""}],"src":"4070:274:5"},{"body":{"nodeType":"YulBlock","src":"4523:151:5","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4540:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4551:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4533:6:5"},"nodeType":"YulFunctionCall","src":"4533:21:5"},"nodeType":"YulExpressionStatement","src":"4533:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4574:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4585:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4570:3:5"},"nodeType":"YulFunctionCall","src":"4570:18:5"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:5","type":"","value":"2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4563:6:5"},"nodeType":"YulFunctionCall","src":"4563:29:5"},"nodeType":"YulExpressionStatement","src":"4563:29:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4612:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:5"},"nodeType":"YulFunctionCall","src":"4608:18:5"},{"hexValue":"5341","kind":"string","nodeType":"YulLiteral","src":"4628:4:5","type":"","value":"SA"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4601:6:5"},"nodeType":"YulFunctionCall","src":"4601:32:5"},"nodeType":"YulExpressionStatement","src":"4601:32:5"},{"nodeType":"YulAssignment","src":"4642:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4654:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4665:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4650:3:5"},"nodeType":"YulFunctionCall","src":"4650:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4642:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4500:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4514:4:5","type":""}],"src":"4349:325:5"},{"body":{"nodeType":"YulBlock","src":"4853:151:5","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4870:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4881:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4863:6:5"},"nodeType":"YulFunctionCall","src":"4863:21:5"},"nodeType":"YulExpressionStatement","src":"4863:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4904:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4915:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4900:3:5"},"nodeType":"YulFunctionCall","src":"4900:18:5"},{"kind":"number","nodeType":"YulLiteral","src":"4920:1:5","type":"","value":"2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4893:6:5"},"nodeType":"YulFunctionCall","src":"4893:29:5"},"nodeType":"YulExpressionStatement","src":"4893:29:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4942:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4953:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4938:3:5"},"nodeType":"YulFunctionCall","src":"4938:18:5"},{"hexValue":"5354","kind":"string","nodeType":"YulLiteral","src":"4958:4:5","type":"","value":"ST"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4931:6:5"},"nodeType":"YulFunctionCall","src":"4931:32:5"},"nodeType":"YulExpressionStatement","src":"4931:32:5"},{"nodeType":"YulAssignment","src":"4972:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4984:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4995:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4980:3:5"},"nodeType":"YulFunctionCall","src":"4980:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4972:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4830:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4844:4:5","type":""}],"src":"4679:325:5"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_struct_ExactInputSingleParams(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), 0xffffff))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n        mstore(add(pos, 0xe0), and(mload(add(value, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_struct_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_struct_ExactInputSingleParams(value0, headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"STF\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"SA\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"ST\")\n        tail := add(headStart, 96)\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"370":[{"length":32,"start":153},{"length":32,"start":290},{"length":32,"start":441},{"length":32,"start":636},{"length":32,"start":787},{"length":32,"start":951}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089fe6aa1461005157806373bd43ad14610073578063c31c9c0714610094578063c4b69a18146100d3575b600080fd5b61005a610bb881565b60405162ffffff90911681526020015b60405180910390f35b610086610081366004610714565b6100e6565b60405190815260200161006a565b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006a565b6100866100e136600461072d565b610240565b6000610108739c3c9283d3e44854697cd22d3faa240cfb03288933308561040c565b61014773e6b8a5cf854791412c1f6efc7caf629f5df1c7477f00000000000000000000000000000000000000000000000000000000000000008461051b565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb032889815273e6b8a5cf854791412c1f6efc7caf629f5df1c7476020820152610bb88183015233606082015242608082015260a08101849052600060c0820181905260e0820152905163414bf38960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063414bf389906101f690849060040161074f565b6020604051808303816000875af1158015610215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023991906107bf565b9392505050565b6000610262739c3c9283d3e44854697cd22d3faa240cfb03288933308561040c565b6102a1739c3c9283d3e44854697cd22d3faa240cfb0328897f00000000000000000000000000000000000000000000000000000000000000008461051b565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb032889815273e6b8a5cf854791412c1f6efc7caf629f5df1c7476020820152610bb88183015233606082015242608082015260a0810185905260c08101849052600060e08201529051631b67c43360e31b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db3e21989061035090849060040161074f565b6020604051808303816000875af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039391906107bf565b915082821015610405576103dd739c3c9283d3e44854697cd22d3faa240cfb0328897f0000000000000000000000000000000000000000000000000000000000000000600061051b565b610405739c3c9283d3e44854697cd22d3faa240cfb0328893361040085876107d8565b61061b565b5092915050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161047091906107f9565b6000604051808303816000865af19150503d80600081146104ad576040519150601f19603f3d011682016040523d82523d6000602084013e6104b2565b606091505b50915091508180156104dc5750805115806104dc5750808060200190518101906104dc9190610828565b6105135760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161057791906107f9565b6000604051808303816000865af19150503d80600081146105b4576040519150601f19603f3d011682016040523d82523d6000602084013e6105b9565b606091505b50915091508180156105e35750805115806105e35750808060200190518101906105e39190610828565b6106145760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161050a565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161067791906107f9565b6000604051808303816000865af19150503d80600081146106b4576040519150601f19603f3d011682016040523d82523d6000602084013e6106b9565b606091505b50915091508180156106e35750805115806106e35750808060200190518101906106e39190610828565b6106145760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161050a565b60006020828403121561072657600080fd5b5035919050565b6000806040838503121561074057600080fd5b50508035926020909101359150565b61010081016107b9828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c0808301519084015260e09182015116910152565b92915050565b6000602082840312156107d157600080fd5b5051919050565b818103818111156107b957634e487b7160e01b600052601160045260246000fd5b6000825160005b8181101561081a5760208186018101518583015201610800565b506000920191825250919050565b60006020828403121561083a57600080fd5b8151801515811461023957600080fdfea26469706673582212202b55d33e7e20142fda52f1e562bbe6a41e7868d3f04b361fc2d05e546b30c6e764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x81 CALLDATASIZE PUSH1 0x4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A JUMP JUMPDEST PUSH2 0xBB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A JUMP JUMPDEST PUSH2 0x86 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 CALLER ADDRESS DUP6 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x147 PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 PUSH32 0x0 DUP5 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 DUP2 MSTORE PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x1F6 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 CALLER ADDRESS DUP6 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x2A1 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 PUSH32 0x0 DUP5 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 DUP2 MSTORE PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x350 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x405 JUMPI PUSH2 0x3DD PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 PUSH32 0x0 PUSH1 0x0 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x405 PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 CALLER PUSH2 0x400 DUP6 DUP8 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x4DC JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x4DC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x5E3 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x5E3 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x6E3 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x6E3 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD PUSH2 0x7B9 DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x800 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B SSTORE 0xD3 RETURNDATACOPY PUSH31 0x20142FDA52F1E562BBE6A41E7868D3F04B361FC2D05E546B30C6E764736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"227:5256:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:37;;1334:4;1301:37;;;;;188:8:5;176:21;;;158:40;;146:2;131:18;1301:37:4;;;;;;;;1911:1300;;;;;;:::i;:::-;;:::i;:::-;;;540:25:5;;;528:2;513:18;1911:1300:4;394:177:5;684:39:4;;;;;;;;-1:-1:-1;;;;;759:32:5;;;741:51;;729:2;714:18;684:39:4;576:222:5;3852:1629:4;;;;;;:::i;:::-;;:::i;1911:1300::-;1977:17;2125:76;1112:42;2165:10;2185:4;2192:8;2125:31;:76::i;:::-;2259:63;1193:42;2300:10;2313:8;2259:26;:63::i;:::-;2621:446;;;;;;;;1112:42;2621:446;;1193:42;2621:446;;;;1334:4;2621:446;;;;2828:10;2621:446;;;;2878:15;2621:446;;;;;;;;;;2570:48;2621:446;;;;;;;;;;3151:35;;-1:-1:-1;;;3151:35:4;;:10;-1:-1:-1;;;;;3151:27:4;;;;:35;;2621:446;;3151:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3139:47;1911:1300;-1:-1:-1;;;1911:1300:4:o;3852:1629::-;3945:16;4042:83;1112:42;4082:10;4102:4;4109:15;4042:31;:83::i;:::-;4354:72;1112:42;4397:10;4410:15;4354:26;:72::i;:::-;4501:354;;;;;;;;1112:42;4501:354;;1193:42;4501:354;;;;1334:4;4501:354;;;;4661:10;4501:354;;;;4699:15;4501:354;;;;;;;;;;;;;;;;4437:49;4501:354;;;;4979:36;;-1:-1:-1;;;4979:36:4;;:10;-1:-1:-1;;;;;4979:28:4;;;;:36;;4501:354;;4979:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4968:47;;5286:15;5275:8;:26;5271:204;;;5317:58;1112:42;5360:10;5373:1;5317:26;:58::i;:::-;5389:75;1112:42;5425:10;5437:26;5455:8;5437:15;:26;:::i;:::-;5389:27;:75::i;:::-;3963:1518;3852:1629;;;;:::o;561:358:3:-;759:69;;;-1:-1:-1;;;;;2918:15:5;;;759:69:3;;;2900:34:5;2970:15;;;2950:18;;;2943:43;3002:18;;;;2995:34;;;759:69:3;;;;;;;;;;2835:18:5;;;;759:69:3;;;;;;;-1:-1:-1;;;;;759:69:3;-1:-1:-1;;;759:69:3;;;748:81;;-1:-1:-1;;;;748:10:3;;;;:81;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:3;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:3;;3941:2:5;839:73:3;;;3923:21:5;3980:1;3960:18;;;3953:29;-1:-1:-1;;;3998:18:5;;;3991:33;4041:18;;839:73:3;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;2032:58;;;-1:-1:-1;;;;;4262:32:5;;;2032:58:3;;;4244:51:5;4311:18;;;;4304:34;;;2032:58:3;;;;;;;;;;4217:18:5;;;;2032:58:3;;;;;;;-1:-1:-1;;;;;2032:58:3;-1:-1:-1;;;2032:58:3;;;2021:70;;-1:-1:-1;;;;2021:10:3;;;;:70;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:3;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:3;;4551:2:5;2101:72:3;;;4533:21:5;4590:1;4570:18;;;4563:29;-1:-1:-1;;;4608:18:5;;;4601:32;4650:18;;2101:72:3;4349:325:5;2101:72:3;1975:205;;1873:307;;;:::o;1211:309::-;1371:59;;;-1:-1:-1;;;;;4262:32:5;;;1371:59:3;;;4244:51:5;4311:18;;;;4304:34;;;1371:59:3;;;;;;;;;;4217:18:5;;;;1371:59:3;;;;;;;-1:-1:-1;;;;;1371:59:3;-1:-1:-1;;;1371:59:3;;;1360:71;;-1:-1:-1;;;;1360:10:3;;;;:71;;1371:59;1360:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;-1:-1:-1;1461:11:3;;:16;;:44;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1441:72;;;;-1:-1:-1;;;1441:72:3;;4881:2:5;1441:72:3;;;4863:21:5;4920:1;4900:18;;;4893:29;-1:-1:-1;;;4938:18:5;;;4931:32;4980:18;;1441:72:3;4679:325:5;209:180;268:6;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;-1:-1:-1;360:23:5;;209:180;-1:-1:-1;209:180:5:o;803:248::-;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;-1:-1:-1;;971:23:5;;;1041:2;1026:18;;;1013:32;;-1:-1:-1;803:248:5:o;1649:290::-;1861:3;1846:19;;1874:59;1850:9;1915:6;1186:12;;-1:-1:-1;;;;;1182:21:5;;;1170:34;;1257:4;1246:16;;;1240:23;1236:32;;1220:14;;;1213:56;1322:4;1311:16;;;1305:23;1330:8;1301:38;1285:14;;;1278:62;1393:4;1382:16;;;1376:23;1372:32;;1356:14;;;1349:56;1454:4;1443:16;;;1437:23;1421:14;;;1414:47;1150:3;1499:16;;;1493:23;1477:14;;;1470:47;1566:4;1555:16;;;1549:23;1533:14;;;1526:47;1626:4;1615:16;;;1609:23;1605:32;1589:14;;1582:56;1056:588;1874:59;1649:290;;;;:::o;1944:184::-;2014:6;2067:2;2055:9;2046:7;2042:23;2038:32;2035:52;;;2083:1;2080;2073:12;2035:52;-1:-1:-1;2106:16:5;;1944:184;-1:-1:-1;1944:184:5:o;2430:225::-;2497:9;;;2518:11;;;2515:134;;;2571:10;2566:3;2562:20;2559:1;2552:31;2606:4;2603:1;2596:15;2634:4;2631:1;2624:15;3040:412;3169:3;3207:6;3201:13;3232:1;3242:129;3256:6;3253:1;3250:13;3242:129;;;3354:4;3338:14;;;3334:25;;3328:32;3315:11;;;3308:53;3271:12;3242:129;;;-1:-1:-1;3426:1:5;3390:16;;3415:13;;;-1:-1:-1;3390:16:5;3040:412;-1:-1:-1;3040:412:5:o;3457:277::-;3524:6;3577:2;3565:9;3556:7;3552:23;3548:32;3545:52;;;3593:1;3590;3583:12;3545:52;3625:9;3619:16;3678:5;3671:13;3664:21;3657:5;3654:32;3644:60;;3700:1;3697;3690:12"},"methodIdentifiers":{"poolFee()":"089fe6aa","swapExactInputSingle(uint256)":"73bd43ad","swapExactOutputSingle(uint256,uint256)":"c4b69a18","swapRouter()":"c31c9c07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its WMATIC for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of WMATIC that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of USDC received.\"}},\"swapExactOutputSingle(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its WMATIC for this function to succeed. As the amount of input WMATIC is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of WMATIC we are willing to spend to receive the specified amount of USDC.\",\"amountOut\":\"The exact amount of USDC to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of WMATIC actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of WMATIC for a maximum possible amount of USDC using the WMATIC/USDC 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of WMATIC for a fixed amount of USDC.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/TokenSwap.sol\":{\"keccak256\":\"0xf0e0aba579d4be8335ce4be3ea104f1133560126b4b8be4c5bee4c1a26bcd258\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://37784a8f6759e24595b26abf90fc061128fe59d00315305a103b93c2b41b1fc6\",\"dweb:/ipfs/QmUvTKRvx9W467dpS27jz9FByHqkge5o7fbtgzQvJw421r\"]}},\"version\":1}"}}}}}